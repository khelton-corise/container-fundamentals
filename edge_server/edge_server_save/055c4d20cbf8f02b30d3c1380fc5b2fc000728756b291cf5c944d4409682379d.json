{"architecture":"amd64","config":{"ExposedPorts":{"80/tcp":{}},"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.24.0","PKG_RELEASE=1"],"Entrypoint":["/docker-entrypoint.sh"],"Cmd":["nginx","-g","daemon off;"],"Labels":{"maintainer":"NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","org.opencontainers.image.authors":"khelton2003@gmail.com","org.opencontainers.image.description":"Containter Fundamentals - Static Website Image","org.opencontainers.image.licenses":"APACHE2","org.opencontainers.image.source":"https://github.com/khelton-corise/container-fundamentals"},"StopSignal":"SIGQUIT","ArgsEscaped":true,"OnBuild":null},"created":"2023-07-23T21:56:07.9085837Z","history":[{"created":"2023-06-14T20:42:04.421448587Z","created_by":"/bin/sh -c #(nop) ADD file:828b07e74c184e7f251ed992ff195cdc50fdca345f13ff484e258851d928d950 in / "},{"created":"2023-06-14T20:42:04.524732458Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2023-06-15T00:19:59.549029637Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","empty_layer":true},{"created":"2023-06-15T00:20:12.411301754Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_VERSION=1.24.0","empty_layer":true},{"created":"2023-06-15T00:20:12.489005167Z","created_by":"/bin/sh -c #(nop)  ENV PKG_RELEASE=1","empty_layer":true},{"created":"2023-06-15T00:20:17.527978592Z","created_by":"/bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"dc47dbaeb1c0874b264d34ddfec40e7d2b814e7db48d144e12d5991c743ef5fcf780ecbab72324e562dd84bb9c0e4dd71d14850b20ceaf470c46f8fe7510275b *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make base                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d"},{"created":"2023-06-15T00:20:17.647800443Z","created_by":"/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "},{"created":"2023-06-15T00:20:17.732697329Z","created_by":"/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "},{"created":"2023-06-15T00:20:17.815768897Z","created_by":"/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "},{"created":"2023-06-15T00:20:17.89938716Z","created_by":"/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "},{"created":"2023-06-15T00:20:17.976629052Z","created_by":"/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]","empty_layer":true},{"created":"2023-06-15T00:20:18.055891178Z","created_by":"/bin/sh -c #(nop)  EXPOSE 80","empty_layer":true},{"created":"2023-06-15T00:20:18.134542999Z","created_by":"/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT","empty_layer":true},{"created":"2023-06-15T00:20:18.214869347Z","created_by":"/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]","empty_layer":true},{"created":"2023-07-23T21:56:07.498706Z","created_by":"LABEL org.opencontainers.image.authors=khelton2003@gmail.com","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-07-23T21:56:07.498706Z","created_by":"LABEL org.opencontainers.image.source=https://github.com/khelton-corise/container-fundamentals","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-07-23T21:56:07.498706Z","created_by":"LABEL org.opencontainers.image.description=Containter Fundamentals - Static Website Image","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-07-23T21:56:07.498706Z","created_by":"LABEL org.opencontainers.image.licenses=APACHE2","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-07-23T21:56:07.498706Z","created_by":"COPY config/nginx.conf /etc/nginx/ # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2023-07-23T21:56:07.9085837Z","created_by":"COPY web_content/ /var/www # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2023-07-23T21:56:07.9085837Z","created_by":"EXPOSE map[80/tcp:{}]","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-07-23T21:56:07.9085837Z","created_by":"CMD [\"nginx\" \"-g\" \"daemon off;\"]","comment":"buildkit.dockerfile.v0","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:3dab9f8bf2d28c8bd1047f3ac2d0c72f3570562f491e67ef8179dfdcc68bccff","sha256:1a3b419ee662f5b5e8a9a4e7a50269d4318862128b24f27e0a9643e861b95a18","sha256:ec2b4937db9f2fca9ec3ad2a5c93703c6ee8695a2460f2fe95b2141d849bc32f","sha256:ed613eb504f4afa546c42451049a069df581e3071164e62d5f63529dba2dac52","sha256:e9d24a183d903f7068e374ef18bb1e5a565194acca420e1295245c3bf53998fa","sha256:50318282ffa91cddcdb00995c96b5614efeba4cc65af78b2b710b133a5568033","sha256:48876d4915ac5c2b079bc05277cda50b1e712725a37ba45bbae5970ebeff7280","sha256:fb4a04c52b40605358004c8456895e28378f278b8a7a807402ed1e844142efb2"]}}